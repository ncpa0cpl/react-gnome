{
  "type": "object",
  "properties": {
    "entrypoint": {
      "description": "The entrypoint file of the application.\nCan be a relative path from the project root or an absolute path.",
      "type": "string"
    },
    "outDir": {
      "description": "The output directory for the generated bundle.\nCan be a relative path from the project root or an absolute path.",
      "type": "string"
    },
    "externalPackages": {
      "type": "array",
      "items": [
        {
          "type": "string"
        }
      ],
      "description": "An array of packages that should be excluded from the bundle.\nThis is useful for packages that are already installed on the system and should not be bundled."
    },
    "minify": {
      "description": "Whether the generated bundle should be minified.\nThis is useful for production builds.\nBy default is enabled in `production` mode and disabled in `development` mode.",
      "type": "boolean"
    },
    "treeShake": {
      "description": "Whether unused code should be removed from the bundle.\nThis is useful for production builds.\nBy default is enabled in `production` mode and disabled in `development` mode.",
      "type": "boolean"
    },
    "esbuildPlugins": {
      "type": "array",
      "items": [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ],
      "description": "Esbuild plugins.\nPlugins can only be added via a JavaScript config file. If you are using a JSON config file and want to add a plugin, you will need to create a `react-gnome.config.js` file and use that instead."
    },
    "giVersions": {
      "type": "object",
      "properties": {
        "Gtk": {
          "type": "string",
          "enum": [
            "3.0"
          ]
        },
        "Gdk": {
          "type": "string"
        },
        "Gio": {
          "type": "string"
        },
        "GLib": {
          "type": "string"
        },
        "GObject": {
          "type": "string"
        },
        "Pango": {
          "type": "string"
        },
        "Atk": {
          "type": "string"
        },
        "Cairo": {
          "type": "string"
        },
        "GModule": {
          "type": "string"
        },
        "GdkPixbuf": {
          "type": "string"
        },
        "Cally": {
          "type": "string"
        },
        "Clutter": {
          "type": "string"
        },
        "ClutterX11": {
          "type": "string"
        },
        "Cogl": {
          "type": "string"
        },
        "Graphene": {
          "type": "string"
        },
        "Gst": {
          "type": "string"
        },
        "HarfBuzz": {
          "type": "string"
        },
        "Soup": {
          "type": "string"
        },
        "cairo": {
          "type": "string"
        },
        "xlib": {
          "type": "string"
        }
      },
      "required": [],
      "description": "The versions of the builtin libraries from the `gi://` namespace, that should be used in the generated bundle.",
      "additionalProperties": false
    },
    "polyfills": {
      "type": "object",
      "properties": {
        "AbortController": {
          "description": "Whether the polyfill for an `AbortController` should be included in the generated bundle. When enabled the `AbortController`, `AbortSignal` and `AbortError` classes will become available in the global scope.",
          "type": "boolean"
        },
        "Blob": {
          "description": "Whether the polyfill for a `Blob` should be included in the generated bundle. When enabled the `Blob` class will become available in the global scope.",
          "type": "boolean"
        },
        "Buffer": {
          "description": "Whether the polyfill for a `Buffer` should be included in the generated bundle. When enabled the `Buffer` class will become available in the global scope.",
          "type": "boolean"
        },
        "FormData": {
          "description": "Whether the polyfill for a `FormData` should be included in the generated bundle. When enabled the `FormData` class will become available in the global scope.",
          "type": "boolean"
        },
        "URL": {
          "description": "Whether the polyfill for a `URL` should be included in the generated bundle. When enabled the `URL` class will become available in the global scope.",
          "type": "boolean"
        },
        "XMLHttpRequest": {
          "description": "Whether the polyfill for a `XMLHttpRequest` should be included in the generated bundle. When enabled the `XMLHttpRequest` class will become available in the global scope.",
          "type": "boolean"
        },
        "base64": {
          "description": "Whether the polyfill for `atob()` and `btoa()` functions should be included in the generated bundle. When enabled the `atob()` and `btoa()` will become available in the global scope.",
          "type": "boolean"
        },
        "fetch": {
          "description": "Whether the polyfill for a `fetch()` function should be included in the generated bundle. When enabled the `fetch()` function will become available in the global scope.",
          "type": "boolean"
        }
      },
      "required": [],
      "description": "Polyfills that should be included in the generated bundle.",
      "additionalProperties": false
    }
  },
  "required": [
    "entrypoint",
    "outDir"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-06/schema#"
}